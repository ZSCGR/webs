@property --per {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}
body,
html {
  width: 100%;
  height: 100%;
  background: linear-gradient(0deg, #EEEFED, #F9E3E9);
  display: flex;
  flex-direction: column;
}

.demo-cube {
  margin: auto;
}

.perspective {
  transform-style: preserve-3d;
  perspective: 520px;
  transform: rotateX(15deg);
}

ul {
  padding: 0;
  list-style: none;
}

.demo-cube {
  position: relative;
  width: 100%;
  height: 200px;
}
.demo-cube .cube {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 300px;
  height: 100px;
  transform-style: preserve-3d;
  transform-origin: 50px 50px;
  transform: translate(-50%, -50%) rotateX(-33.5deg);
}
.demo-cube .cube li {
  position: absolute;
  display: block;
  width: 100px;
  height: 100px;
}
.demo-cube .cube .top {
  width: 300px;
  transform: rotateX(90deg) translateZ(50px);
}
.demo-cube .cube .bottom {
  width: 300px;
  transform: rotateX(-90deg) translateZ(50px);
}
.demo-cube .cube .front {
  width: 300px;
  transform: translateZ(50px);
}
.demo-cube .cube .back {
  width: 300px;
  transform: rotateX(-180deg) translateZ(50px);
}

.percentage .cube .top,
.percentage .cube .front,
.percentage .cube .bottom,
.percentage .cube .back {
  background: linear-gradient(90deg, rgba(156, 39, 176, 0.3), rgba(255, 34, 109, 0.8) 65%, rgba(255, 255, 255, 0.6) 65%, rgba(255, 255, 255, 0.6));
}

.colorful {
  animation: hueRotate 10s infinite linear;
}
.colorful .cube .top,
.colorful .cube .front,
.colorful .cube .bottom,
.colorful .cube .back {
  background: linear-gradient(90deg, rgba(40, 101, 127, 0.9), rgba(133, 165, 181, 0.5) 85%, rgba(255, 255, 255, 0.6) 85%, rgba(255, 255, 255, 0.6));
}

.pink .cube .top,
.pink .cube .front,
.pink .cube .bottom,
.pink .cube .back {
  background: linear-gradient(90deg, rgba(255, 217, 34, 0.6), rgba(255, 34, 109, 0.8) var(--per), rgba(255, 34, 109, 0.1) var(--per), rgba(255, 34, 109, 0.1));
  animation: perChange 6s infinite;
}

@keyframes perChange {
  0% {
    --per: 0%;
  }
  90%, to {
    --per: 80%;
  }
}
@keyframes hueRotate {
  0% {
    filter: hue-rotate(0);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}

/*# sourceMappingURL=styles.css.map */
